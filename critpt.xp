/* slightly modified sample from epix samples gallery */
#include "epix.h"
using namespace ePiX;

// gather references to integrand
double f(double t)
{
	return -0.5*t*(t-3);
}

int main()
{
  double slope;
  double c;
  double x;

  picture(P(0,0), P(3,1.5), "4x1.5in");

  begin();

  h_axis(2);
  v_axis(2);

  c = 1.5;
  x = 0.6;

  slope = (f(x)-f(c))/(x-c);

  line(P(x-0.4,f(x)-0.4*slope),
       P(c+0.2,f(c)+0.2*slope));

  fill(Black());
  circle(P(c,f(c)),0.03);
  circle(P(x,f(x)),0.03);
  nofill();

  dashed();
  line(P(c,f(c)),P(c,0.0));
  line(P(x,f(x)),P(x,0.0));
  solid();

  label(P(c,0.0), P(0,-4), "$c$", b);
  label(P(x,0.0), P(0,-4), "$y$", b);

  label(P(0.1,1.3),P(0,0), "slope $= \\frac{f(y)-f(c)}{y-c} \\geq 0$", br);

  c = 1.5;
  x = 2.1;

  slope = (f(x)-f(c))/(x-c);

  line(P(c-0.2,f(c)-0.2*slope),
       P(x+0.4,f(x)+0.4*slope));

  fill(Black());
  //circle(P(c,f(c)),0.03);
  circle(P(x,f(x)),0.03);
  nofill();

  dashed();
  //line(P(c,f(c)),P(c,0.0));
  line(P(x,f(x)),P(x,0.0));
  solid();

  //label(P(c,0.0), P(0,-4), "$c$", b);
  label(P(x,0.0), P(0,-4), "$x$", b);

  //label(P(x-0.3,f(x)-0.3*slope),
        //P(1,4), "slope $= \\frac{f(x)-f(y)}{x-y}$", tl);
  label(P(2.9,1.3),P(0,0), "slope $= \\frac{f(x)-f(c)}{x-c} \\leq 0$", bl);
  //label(P(0.2,1.2),P(0,0), "$\\lvert \\text{slope} \\rvert \\leq K$", br);

  bold();
  plot(f, xmin(), xmax(), 40);

  tikz_format();
  end();
}

